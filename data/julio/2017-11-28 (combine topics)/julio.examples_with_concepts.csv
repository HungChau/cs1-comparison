Week,Topic,Subtopic,,ContentType,Content,concepts
1,Variables,,1,code_sample,"public class HelloWorld {@@public static void main(String[] args) {@@   int x = 2;@@   double d = 10.0;@@   String name = ""Luke Skywalker"";@@   System.out.print(""The total is "");@@   System.out.println(""Hello World"");@@  }@@ }@@",SimpleAssignmentExpression:3;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;StringVariable:1;ClassDefinition:1;java.lang.System.out.print:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:3;StringLiteral:3;MethodDefinition:1;IntDataType:1;VoidDataType:1;StringInitializationStatement:1;DoubleDataType:1;ActualMethodParameter:2;
1,Variables,,1,code_sample,package edu.pitt.is17.lec02;@@@@public class Variables1 {@@@@ public static void main(String[] args) {@@  int number;@@  number = 10;@@  int anotherNumber = 10;@@  double thirdNumber = 0.5;@@  @@  int thisIsAnotherVariableOfMine;@@  @@ }@@@@}@@,SimpleAssignmentExpression:3;PublicClassSpecifier:1;StaticMethodSpecifier:1;PublicMethodSpecifier:1;MethodDefinition:1;IntDataType:3;VoidDataType:1;DoubleDataType:1;ClassDefinition:1;SimpleVariable:2;FormalMethodParameter:1;
1,Variables,,1,code_sample,package edu.pitt.is17.lec02;@@@@public class Variables01 {@@@@ public static void main(String[] args) {@@  int myNumber; @@  myNumber = 3; @@  int n = 1; @@  double realNumber = 0.5; @@  realNumber = n;  @@  System.out.println(realNumber);@@ }@@@@}@@,SimpleAssignmentExpression:4;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;MethodDefinition:1;IntDataType:2;VoidDataType:1;DoubleDataType:1;SimpleVariable:1;ActualMethodParameter:1;
1,Variables,,1,code_sample,package edu.pitt.is17.lec02;@@@@public class Variables2 {@@@@ public static void main(String[] args) {@@  int n = 1;@@  double d = n*1.5;@@  @@  System.out.println(b);@@ }@@@@}@@,SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;MultiplyExpression:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;MethodDefinition:1;IntDataType:1;VoidDataType:1;DoubleDataType:1;ActualMethodParameter:1;
1,Variables,,1,code_sample,package edu.pitt.is17.lec02;@@@@public class Variables3 {@@@@ public static void main(String[] args) {@@  double a = (4.0 + 3.0) * (1.0 / 2.0);@@  @@  System.out.println(a);@@  int b = 10 % 4;@@@@  System.out.println(b);@@  b++; @@  System.out.println(b);@@  @@  int d = b--;@@  @@  @@@@ }@@@@}@@,SimpleAssignmentExpression:3;PublicClassSpecifier:1;PostIncrementExpression:1;PublicMethodSpecifier:1;java.lang.System.out.println:3;ModulusExpression:1;MultiplyExpression:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;DivideExpression:1;AddExpression:1;MethodDefinition:1;IntDataType:2;VoidDataType:1;DoubleDataType:1;PostDecrementExpression:1;ActualMethodParameter:3;
2,2-primitive-data-types,,1,code_sample,"package edu.pitt.is17.lec02;@@@@public class Consversions1 {@@ /**@@  * This program shows hot to convert from number to @@  * string and from string to number@@  * @@  */@@ public static void main(String[] args) {@@  @@  double a = 3.5;@@  String aAsString = a+""""; @@  String numberStr = ""3.5"";@@  String numberStr2 = ""3"";@@ int n = Integer.parseInt(numberStr2);@@@@  System.out.println(number/2);@@ }@@@@}@@",SimpleAssignmentExpression:5;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;StringAddition:1;StringVariable:3;ClassDefinition:1;java.lang.Integer.parseInt:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:3;DivideExpression:1;StringLiteral:3;MethodDefinition:1;IntDataType:1;VoidDataType:1;StringInitializationStatement:2;DoubleDataType:1;ActualMethodParameter:2;
2,2-primitive-data-types,,1,code_sample,package edu.pitt.is17.lec02;@@@@public class NameConventions {@@@@ public static void main(String[] args) {@@   int thisIsMyFirstVariable;@@@@ }@@@@}@@,PublicClassSpecifier:1;StaticMethodSpecifier:1;PublicMethodSpecifier:1;MethodDefinition:1;IntDataType:1;VoidDataType:1;ClassDefinition:1;SimpleVariable:1;FormalMethodParameter:1;
2,2-primitive-data-types,,1,code_sample,"package edu.pitt.is17.lec02;@@@@public class NumberStringConversion {@@@@ public static void main(String[] args) {@@  String numberStr = ""10"";@@  @@  int n = Integer.parseInt(numberStr);@@  @@  double d = Double.parseDouble(""0.5325"");@@@@ }@@@@}@@",SimpleAssignmentExpression:3;PublicClassSpecifier:1;PublicMethodSpecifier:1;StringVariable:1;ClassDefinition:1;java.lang.Integer.parseInt:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:2;StringLiteral:2;MethodDefinition:1;IntDataType:1;VoidDataType:1;StringInitializationStatement:1;DoubleDataType:1;ActualMethodParameter:2;java.lang.Double.parseDouble:1;
2,2-primitive-data-types,,1,code_sample,public class PrimitiveDataTypes@@{@@ public static void main(String[] args)@@ {@@  byte byteNumber = 7;@@  short shortNumber = 1234;@@  int integerNumber = 1;@@  long longNumber = 123456789L;@@  float floatNumber = 1.2F;@@  double doubleNumber = 1.496;@@  boolean b = true;@@  boolean c = false;@@  char myChar = 'X';@@ }@@},SimpleAssignmentExpression:9;PublicClassSpecifier:1;FloatDataType:1;ShortDataType:1;PublicMethodSpecifier:1;ByteDataType:1;True:1;False:1;CharDataType:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;MethodDefinition:1;IntDataType:1;VoidDataType:1;DoubleDataType:1;LongDataType:1;BooleanDataType:2;
3,3-constants,,1,code_sample,package edu.pitt.is17.lec02;@@@@public class Constants1 {@@ static final double PI = 3.141593;@@ static final double MY_CONSTANT = 0.05;@@ @@ public static void main(String[] args) {@@        int dollars = 10;@@        int quarters = 3;@@        int dimes = 4;@@        @@        final double QUARTER_VALUE = 0.25;@@        final double DIME_VALUE = 0.1;@@        @@        double payment = dollars + quarters * QUARTER_VALUE + dimes * DIME_VALUE;@@ }@@}@@,SimpleAssignmentExpression:8;PublicClassSpecifier:1;PublicMethodSpecifier:1;ClassConstantInitializationStatement:2;Constant:2;MultiplyExpression:1;ClassDefinition:1;FinalFieldSpecifier:2;FormalMethodParameter:1;StaticMethodSpecifier:1;ConstantInitializationStatement:2;AddExpression:1;MethodDefinition:1;IntDataType:3;VoidDataType:1;DoubleDataType:5;StaticFieldSpecifier:2;ClassField:2;
3,3-constants,,1,code_sample,package edu.pitt.is17.lec02;@@@@public class Constants {@@@@ public static void main(String[] args) {@@  final double PI_MATH = 3.14159235232;@@  double area1 = 1 * 1 * PI_MATH;@@  double area2 = 2 * 2 * PI_MATH;@@  double area3 = 3 * 3 * PI_MATH;@@  double area4 = 4 * 4 * PI_MATH;@@  double area5 = 5 * 5 * PI_MATH;@@@@ }@@@@}@@,SimpleAssignmentExpression:6;PublicClassSpecifier:1;StaticMethodSpecifier:1;ConstantInitializationStatement:1;PublicMethodSpecifier:1;MethodDefinition:1;Constant:1;VoidDataType:1;MultiplyExpression:5;DoubleDataType:6;ClassDefinition:1;FormalMethodParameter:1;
3,3-constants,,1,code_sample,package edu.pitt.is17.lec02;@@@@public class Constants1 {@@ static final double PI = 3.141593;@@ static final double MY_CONSTANT = 0.05;@@ @@ public static void main(String[] args) {@@  double radius = 2.4;@@  @@  double area1 = PI * radius * radius;@@  double area2 = PI * 1 * 1;@@  double area3 = PI * 2 * 2;@@  double area4 = PI * 3 * 3;@@  double area5 = PI * 4 * 4;@@  @@ }@@@@}@@,SimpleAssignmentExpression:8;PublicClassSpecifier:1;PublicMethodSpecifier:1;ClassConstantInitializationStatement:2;MultiplyExpression:5;ClassDefinition:1;FinalFieldSpecifier:2;FormalMethodParameter:1;StaticMethodSpecifier:1;MethodDefinition:1;VoidDataType:1;DoubleDataType:8;StaticFieldSpecifier:2;ClassField:2;
4,4-Arithmetic-operations,,2,code_sample,package edu.pitt.is17.lec02;@@@@public class ArithmeticOperations1 {@@ public static void main(String[] args) {@@  int n = 3 + 5 / 2 - 2; @@  System.out.println(n);@@  double d = 3 + 5 / 2 - 2;@@  System.out.println(d);@@ }@@},SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:2;ClassDefinition:1;FormalMethodParameter:1;SubtractExpression:2;StaticMethodSpecifier:1;DivideExpression:2;AddExpression:2;MethodDefinition:1;IntDataType:1;VoidDataType:1;DoubleDataType:1;ActualMethodParameter:2;
4,4-Arithmetic-operations,,2,code_sample,package edu.pitt.is17.lec02;@@@@public class ArithmeticOperations2 {@@@@ public static void main(String[] args) {@@  int n = 10 % 3;@@  @@  n++; @@  n--;@@  ++n;@@   --n;@@  n = 1;@@  int a = n++ - 2;@@  @@  System.out.println(a);@@  System.out.println(n);@@@@ }@@@@}@@,SimpleAssignmentExpression:3;PublicClassSpecifier:1;PostIncrementExpression:2;PreDecrementExpression:1;PreIncrementExpression:1;PublicMethodSpecifier:1;ModulusExpression:1;java.lang.System.out.println:2;ClassDefinition:1;FormalMethodParameter:1;SubtractExpression:1;StaticMethodSpecifier:1;MethodDefinition:1;IntDataType:2;VoidDataType:1;PostDecrementExpression:1;ActualMethodParameter:2;
4,4-Arithmetic-operations,,2,code_sample,package edu.pitt.is17.lec02;@@@@public class ArithmeticOperations1 {@@ public static void main(String[] args) {@@  int x = 5;@@  double y = 2.5;@@  double result = x * y;@@  double average = (1 + 1)/3;  @@  int counter = 0;@@  counter++;@@  int counter = 0;@@  counter = counter + 1;@@  int counter = 5;@@  counter--;@@  int counter = 5;@@  counter = counter - 1;@@  int x = 27@@    x++;@@  x = x + 2;@@  int x = 33;@@  x--;@@  x-=2;@@double y = Math.sqrt(4);@@  long r = Math.round(x/y);@@@@ double x = Math.pow(5$$4);@@}@@},SimpleAssignmentExpression:16;PublicClassSpecifier:1;PostIncrementExpression:2;PublicMethodSpecifier:1;MultiplyExpression:1;ClassDefinition:1;java.lang.Math.pow:1;FormalMethodParameter:1;SubtractExpression:1;StaticMethodSpecifier:1;java.lang.Math.sqrt:1;DivideExpression:2;AddExpression:3;MinusAssignmentExpression:1;MethodDefinition:1;IntDataType:7;java.lang.Math.round:1;VoidDataType:1;DoubleDataType:5;PostDecrementExpression:2;LongDataType:1;ActualMethodParameter:3;
4,4-Arithmetic-operations,,2,code_sample,public class TypeCasting@@{@@ public static void main(String[] args)@@ {@@  double saleTotal = 175.05;@@  double balance = salesTotal * 0.07;@@  int dollars = balance;@@@@        double saleTotal = 175.05;@@  final double PA_SALES_TAX = 0.07;@@  double balance = salesTotal * PA_SALES_TAX;@@  int dollars = (int) balance;@@ }@@},SimpleAssignmentExpression:7;PublicClassSpecifier:1;PublicMethodSpecifier:1;Constant:1;MultiplyExpression:2;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;ExplicitTypeCasting:1;ConstantInitializationStatement:1;MethodDefinition:1;IntDataType:2;VoidDataType:1;DoubleDataType:5;
5,5-strings,,3,code_sample,"package edu.pitt.is17.lec02;@@@@import javax.swing.JOptionPane;@@@@public class FortuneTeller {@@ public static void main(String[] args){@@  double magicFactor = 2.5;@@  int magicNumber = 7;@@  String message = ""Welcome to The Fortune Teller"";@@  message = message + ""\nPlease tell me your name:"";@@  String name = JOptionPane.showInputDialog(message);@@  String ageStr = JOptionPane.showInputDialog(""and your age"");@@  int age = Integer.parseInt(ageStr);@@  int x = age / magicNumber + (age % 7);@@  int y = (int) Math.round(name.length() / magicFactor);@@  int days = (x*y);@@  System.out.println(""Thank you ""+name);@@  System.out.println(""The shadows from above said that you will be given an important ""@@    + ""oportunity in the future$$ in exaclty ""+days+"" days from now.\nDo not miss it!"");@@ }@@}",PublicClassSpecifier:1;StaticMethodSpecifier:1;PublicMethodSpecifier:1;MethodDefinition:1;VoidDataType:1;ImportStatement:1;ClassDefinition:1;FormalMethodParameter:1;
5,5-strings,,3,code_sample,"package edu.pitt.is17.lec02;@@@@import javax.swing.JOptionPane;@@@@public class InputOutput {@@ final static double PI = 3.14159;@@ @@ /*@@  * Basic input output using JOptionPane@@  */@@ public static void main(String[] args) {@@  String input = JOptionPane.showInputDialog(""Please$$ enter the value of a radius:"");@@ double r = Double.parseDouble(input);@@  @@  double area = r*r*PI;@@  @@ System.out.println(""The area of a circle of radius ""+r+"" is ""+area);@@  JOptionPane.showMessageDialog(null$$""The area of a circle of radius ""+r+"" is ""+area);@@  @@ }@@@@}@@",SimpleAssignmentExpression:4;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;ClassConstantInitializationStatement:1;MultiplyExpression:1;StringAddition:2;ImportStatement:1;StringVariable:1;ClassDefinition:1;FinalFieldSpecifier:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:3;StringLiteral:3;MethodDefinition:1;VoidDataType:1;DoubleDataType:3;ObjectMethodInvocation:2;StaticFieldSpecifier:1;ClassField:1;ActualMethodParameter:4;java.lang.Double.parseDouble:1;
5,5-strings,,3,code_sample,"package edu.pitt.is17.lec02;@@@@import javax.swing.JOptionPane;@@@@@@public class InputOutput {@@@@ public static void main(String[] args) {@@  String input = JOptionPane.showInputDialog(""Enter a temperature:"");@@  double t = Double.parseDouble(input);@@  @@  double c = (t - 32) * 5.0/9;@@  @@  JOptionPane.showMessageDialog(null$$ t+"" F = "" + c + "" C"");@@ @@ }@@@@}@@",SimpleAssignmentExpression:3;PublicClassSpecifier:1;PublicMethodSpecifier:1;MultiplyExpression:1;StringAddition:1;ImportStatement:1;StringVariable:1;ClassDefinition:1;FormalMethodParameter:1;SubtractExpression:1;StaticMethodSpecifier:1;StringDataType:2;DivideExpression:1;StringLiteral:2;MethodDefinition:1;VoidDataType:1;DoubleDataType:2;ObjectMethodInvocation:2;ActualMethodParameter:3;java.lang.Double.parseDouble:1;
5,5-strings,,3,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings2 {@@@@ public static void main(String[] args) {@@        String firstName = ""Harry"";@@        int n = firstName.length();@@        String firstName = """";@@        String firstName = ""Walter"";@@        String lastName = ""White"";@@        String fullName = firstName + "" "" + lastName;@@        int x = 5;@@        x = x + 3;@@        @@        String name = ""Peter"";@@        String lastName = ""Pan"";@@        @@        name = name + lastName;@@        String jobTitle = ""Secret Agent"";@@        int employeeId = 7;@@        String fullTitle = jobTitle + "" "" + employeeId;@@        @@        System.out.print(""The total is "");@@        System.out.println(total);@@        System.out.println(""The total is "" + total);@@        String name = ""Harry"";@@        char start = name.charAt(0); @@        char last = name.charAt(4);   @@   String b = ""Java is great."".substring(5$$7);@@        String n = """" + 7;@@        String n = String.valueOf(0.25);@@        int x = Integer.parseInt(""5"");@@@@@@ }@@@@}@@",StringAddition:4;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:16;MethodDefinition:1;java.lang.String.charAt:2;SimpleAssignmentExpression:21;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:2;StringVariable:13;CharDataType:2;StringLiteralMethodInvocation:1;java.lang.Integer.parseInt:1;java.lang.System.out.print:1;java.lang.String.length:1;StringLiteral:15;AddExpression:2;IntDataType:4;java.lang.String.substring:1;VoidDataType:1;StringInitializationStatement:8;ObjectMethodInvocation:3;ActualMethodParameter:8;
5,5-strings,,3,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings1 {@@ public static void main(String[] args) {@@  String myName = ""voldemort"";@@  @@  String firstLetter = myName.charAt(0) + """"; @@  String lastLetter = myName.charAt(myName.length()-1) + """"; @@  @@  @@  firstLetter = firstLetter.toUpperCase();@@  lastLetter = lastLetter.toUpperCase();@@  @@  String middleOfName = myName.substring(1$$ myName.length()-1);@@  @@  System.out.println(firstLetter + middleOfName + lastLetter); @@ }@@@@}@@",SimpleAssignmentExpression:6;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;StringAddition:2;StringVariable:4;ClassDefinition:1;FormalMethodParameter:1;SubtractExpression:2;StaticMethodSpecifier:1;StringDataType:4;java.lang.String.length:2;StringLiteral:3;AddExpression:1;MethodDefinition:1;java.lang.String.substring:1;VoidDataType:1;java.lang.String.charAt:2;StringInitializationStatement:1;ObjectMethodInvocation:5;ActualMethodParameter:4;
5,5-strings,,3,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings2 {@@@@ public static void main(String[] args) {@@  int age = 3;@@  String name = ""Snoopy"";@@@@  System.out.println(name+"" has ""+age+"" years old"");@@  @@@@  @@  @@ }@@@@}@@",SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;StringAddition:1;StringVariable:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:2;StringLiteral:2;MethodDefinition:1;IntDataType:1;VoidDataType:1;StringInitializationStatement:1;ActualMethodParameter:1;
5,5-strings,,3,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings1 {@@@@ public static void main(String[] args) {@@  String aName = ""Snoopy"";@@  System.out.println(aName.length());@@  System.out.println(aName.charAt(aName.length()-1));  @@ }@@@@}@@",SimpleAssignmentExpression:1;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:2;StringVariable:1;ClassDefinition:1;FormalMethodParameter:1;SubtractExpression:1;StaticMethodSpecifier:1;StringDataType:1;java.lang.String.length:2;StringLiteral:1;MethodDefinition:1;VoidDataType:1;java.lang.String.charAt:1;StringInitializationStatement:1;ObjectMethodInvocation:1;ActualMethodParameter:2;
6,6-boolean-expressions,,4,code_sample,package edu.pitt.is17.lecture3;@@@@public class Condition4 {@@@@ public static void main(String[] args) {@@  int x = 0;@@  int y = 0;@@  if(x == 0 && y == 0){@@   @@  }@@  @@@@  if(x == 0 || y == 0){@@   @@  }@@  @@  if(x+y==y || x+y==x){@@   @@  }@@  @@  if((x == 0 && y != 0) || (x != 0 && y == 0)){@@   @@  }@@   @@   @@   @@   @@@@  }@@@@}@@,SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;EqualExpression:4;ClassDefinition:1;OrExpression:3;FormalMethodParameter:1;NotEqualExpression:1;StaticMethodSpecifier:1;IfStatement:4;AndExpression:2;AddExpression:1;MethodDefinition:1;IntDataType:2;VoidDataType:1;
6,6-boolean-expressions,,4,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings2 {@@    @@    public static void main(String[] args) {@@        if(accountBalance = 0){@@            System.out.println(""No money in your account!"");@@        }@@        boolean a;@@        boolean b = true;@@        boolean c = (5 > 2);@@        if (temp > 0 && temp < 100) {@@            System.out.println(""Liquid"");@@        }@@        if (temp <= 0 || temp >= 100) {@@            System.out.println(""Not liquid"");@@        }@@        if (!frozen) {@@            System.out.println(""Not frozen"");@@        }@@        if (currency.equals(""dollars"") || currency.equals(""euro"")){@@               }@@        if (isLoggedIn == true && canViewPage == true){@@          }@@        boolean isValidUser = false;@@        @@        if (isValidUser != true){@@        }@@        if (!isValidUser){@@        }@@        @@        String firstName = JOptionPane.showInputDialog(""First name:"");@@        String middleInitial = JOptionPane.showInputDialog(""Middle name initial (cancel to skip):"");@@        String lastName = JOptionPane.showInputDialog(""Last name:"");@@        @@        if (middleInitial == null) {@@            System.out.println(firstName + "" "" + lastName);@@        }@@        @@    }@@    @@}@@",GreaterEqualExpression:1;EqualExpression:2;StringAddition:1;True:3;NotExpression:2;False:1;ClassDefinition:1;OrExpression:2;FormalMethodParameter:1;LessEqualExpression:1;NotEqualExpression:1;StaticMethodSpecifier:1;IfStatement:9;StringDataType:9;LessExpression:1;AndExpression:2;MethodDefinition:1;GreaterExpression:2;BooleanDataType:4;SimpleVariable:1;java.lang.String.equals:1;SimpleAssignmentExpression:7;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:5;StringVariable:3;StringLiteral:9;null:1;VoidDataType:1;ObjectMethodInvocation:4;ActualMethodParameter:9;
7,7-if-else,,4,code_sample,"package edu.pitt.is17.lecture3;@@@@import javax.swing.JOptionPane;@@@@public class Condition1 {@@@@ public static void main(String[] args) {@@  /*@@   * Assume a variable x is containing a double value. @@   * Write an if-else statement that multiply it by itself @@   * if the value is greater than 1. Otherwise it should @@   * divide it by 2.@@   */@@@@  String userInput = JOptionPane.showInputDialog(""Enter a number:"");@@   if(userInput != null){@@   double numInput = Double.parseDouble(userInput);@@   if(numInput > 1){@@    numInput = numInput * numInput;@@   }   else{@@    numInput = numInput / 2;@@   }@@@@   System.out.println(numInput);@@  } else{@@   System.out.println(""Null value"");@@  }@@ }@@@@}@@",SimpleAssignmentExpression:4;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:2;MultiplyExpression:1;IfElseStatement:2;ImportStatement:1;StringVariable:1;ClassDefinition:1;FormalMethodParameter:1;NotEqualExpression:1;StaticMethodSpecifier:1;StringDataType:2;DivideExpression:1;StringLiteral:2;null:1;MethodDefinition:1;VoidDataType:1;GreaterExpression:1;DoubleDataType:1;ObjectMethodInvocation:1;ActualMethodParameter:4;java.lang.Double.parseDouble:1;
7,7-if-else,,4,code_sample,"package edu.pitt.is17.lecture3;@@@@import javax.swing.JOptionPane;@@@@public class Condition2 {@@@@ public static void main(String[] args) {@@  /*@@   * Using an if statement and the modulus (%) operator @@   * write a program that asks users to enter a number @@   * and determines whether the number entered is even or odd.@@   */@@  String userInput = JOptionPane.showInputDialog(""Enter a number:"");@@   int numInput = Integer.parseInt(userInput);@@  if(numInput % 2 == 0){@@   System.out.println(""Number is even"");@@  }  else{@@   System.out.println(""Number is odd"");@@  } @@@@ }@@@@}@@",SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;ModulusExpression:1;java.lang.System.out.println:2;IfElseStatement:1;EqualExpression:1;ImportStatement:1;StringVariable:1;ClassDefinition:1;java.lang.Integer.parseInt:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:3;StringLiteral:3;MethodDefinition:1;IntDataType:1;VoidDataType:1;ObjectMethodInvocation:1;ActualMethodParameter:4;
7,7-if-else,,4,code_sample,"package edu.pitt.is17.lecture3;@@@@import javax.swing.JOptionPane;@@@@public class Condition3 {@@@@ public static void main(String[] args) {@@  String strName1 = JOptionPane.showInputDialog(""Enter Name 1"");@@  String strName2 = JOptionPane.showInputDialog(""Enter Name 2"");@@@@  @@  if (strName1.equalsIgnoreCase(strName2)){@@   System.out.print(""The two strings are equal"");@@  }@@  else{@@   System.out.print(""The two strings are NOT equal"");@@  }@@@@@@ }@@@@}@@",SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;IfElseStatement:1;ImportStatement:1;StringVariable:2;ClassDefinition:1;java.lang.String.equalsIgnoreCase:1;java.lang.System.out.print:2;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:4;StringLiteral:4;MethodDefinition:1;VoidDataType:1;ObjectMethodInvocation:3;ActualMethodParameter:5;
7,7-if-else,,4,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings2 {@@    @@    public static void main(String[] args) {@@        if (richter >= 8.0)@@        {@@            description = ""Most structures fall"";@@        }@@        else if (richter >= 7.0)@@        {@@            description = ""Many buildings destroyed"";@@        }@@        else if (richter >= 6.0)@@        {@@            description = ""Many buildings considerably damaged$$ some collapse"";@@        }@@        else if (richter >= 4.5)@@        {@@            description = ""Damage to poorly constructed buildings"";@@        }@@        else@@        {@@            description = ""No destruction of buildings"";@@        }@@        @@    }@@    @@}@@",SimpleAssignmentExpression:5;PublicClassSpecifier:1;IfElseIfStatement:3;PublicMethodSpecifier:1;GreaterEqualExpression:4;IfElseStatement:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:5;StringLiteral:5;MethodDefinition:1;VoidDataType:1;
8,9-loops-while,,5,code_sample,"package edu.pitt.is17.lecture4;@@@@public class Loop1 {@@@@ public static void main(String[] args) {@@  String myName = ""Dmitriy"";@@  int i = 1;@@  int maxLimit = 1000;@@  while(i<= maxLimit){@@   System.out.println(i + ""\t"" + myName);@@   i++;@@  }@@@@ }@@@@}@@",SimpleAssignmentExpression:3;PublicClassSpecifier:1;PostIncrementExpression:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;StringAddition:1;StringVariable:1;WhileStatement:1;ClassDefinition:1;FormalMethodParameter:1;LessEqualExpression:1;StaticMethodSpecifier:1;StringDataType:2;StringLiteral:2;MethodDefinition:1;IntDataType:2;VoidDataType:1;StringInitializationStatement:1;ActualMethodParameter:1;
9,10-loops-do-while,,5,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings2 {@@    @@    public static void main(String[] args) {@@        int number = 0;@@        int theSum = 0;@@        do{@@            theSum += number;@@            number = Integer.parseInt(JOptionPane.showInputDialog(""the next number (-1 to exit)""));@@        }while(number != -1);@@        JOptionPane.showMessageDialog(null$$ ""The sum is "" + theSum);@@    }@@}@@",SimpleAssignmentExpression:3;AddAssignmentExpression:1;PublicClassSpecifier:1;DoStatement:1;PublicMethodSpecifier:1;StringAddition:1;WhileStatement:1;ClassDefinition:1;java.lang.Integer.parseInt:1;FormalMethodParameter:1;NotEqualExpression:1;StaticMethodSpecifier:1;StringDataType:2;StringLiteral:2;MethodDefinition:1;IntDataType:2;VoidDataType:1;ObjectMethodInvocation:2;ActualMethodParameter:2;
10,11-loops-for,,5,code_sample,"package edu.pitt.is17.lecture4;@@@@public class Loop2 {@@@@ public static void main(String[] args) {@@  boolean checkPalindrome = isPalindrome(""Eva$$ can I see bees in a cave?"");@@  if(checkPalindrome){@@   System.out.println(""Sentence is a palindrome"");@@  }@@  else{@@   System.out.println(""Sentence is NOT a palindrome"");@@  }@@ }@@ @@ public static String stripBadChars(String text){@@  String badChars = ""$$ @!#$%^&*()_+=?<>$$.;'"";@@  @@  for(int i = 0; i<badChars.length(); i++){@@     String currentBadChar = String.valueOf(badChars.charAt(i));@@   text = text.replace(currentBadChar$$ """");@@  }@@  @@  return text;@@ }@@ @@ public static boolean isPalindrome(String text){@@   int start = text.length() - 1;@@  int end = 0;@@  for(int i = start; i>= end; i--){@@   char currentCharacter = text.charAt(i);@@   @@   reversedText = reversedText + currentCharacter;@@   @@  }@@  @@  @@   reversedText = stripBadChars(reversedText);@@  text = stripBadChars(text);@@  @@  if(reversedText.equalsIgnoreCase(text)){@@   return true;@@  }@@  else{@@   return false;@@  }@@  @@ }@@ @@ public static int calculateSum(int upperLimit){@@  int sum = 0;@@  for(int i = 0; i<=upperLimit; i++){@@   sum = sum + i;@@  }@@  return sum;@@ }@@ @@ public static int calculateBalance(double initAmount$$ int factor){@@  double finalBalance = initAmount * factor;@@  double tempBalance = initAmount;@@  final double APR = 0.05;@@  int year = 1;@@   while(tempBalance <= finalBalance){@@    double accruedInterest = tempBalance * APR;@@   tempBalance = tempBalance + accruedInterest;@@   year ++;@@  }@@  return year;@@ }@@@@}@@",GreaterEqualExpression:1;Constant:1;True:1;False:1;WhileStatement:1;ClassDefinition:1;java.lang.String.equalsIgnoreCase:1;FormalMethodParameter:5;LessEqualExpression:2;SubtractExpression:1;StaticMethodSpecifier:5;StringDataType:4;ConstantInitializationStatement:1;MethodDefinition:5;java.lang.String.charAt:1;ReturnStatement:4;PostDecrementExpression:1;BooleanDataType:2;ForStatement:2;SimpleAssignmentExpression:17;PublicClassSpecifier:1;PostIncrementExpression:2;PublicMethodSpecifier:5;java.lang.System.out.println:2;MultiplyExpression:2;IfElseStatement:2;CharDataType:1;java.lang.String.length:1;StringLiteral:3;AddExpression:3;IntDataType:8;VoidDataType:1;DoubleDataType:5;ObjectMethodInvocation:2;ActualMethodParameter:7;
11,12-nested-loops,,5,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings2 {@@    @@    public static void main(String[] args) {@@        for(int i=1;i<4;i++){@@            for(int j=1;j<4;j++){@@                System.out.println(i+"" x ""+j+"" = ""+(i*j));@@            }@@        }@@@@    }@@    @@}@@",SimpleAssignmentExpression:2;PublicClassSpecifier:1;PostIncrementExpression:2;PublicMethodSpecifier:1;java.lang.System.out.println:1;MultiplyExpression:1;StringAddition:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;LessExpression:2;StringDataType:1;StringLiteral:1;MethodDefinition:1;IntDataType:2;VoidDataType:1;ForStatement:2;ActualMethodParameter:1;
12,13-objects,,6,code_sample,"package edu.pitt.is17.lec02;@@@@public class Strings2 {@@    @@    public static void main(String[] args) {@@        Car myCar = new Car();@@        @@        myCar.mileage = 0.0;@@        myCar.brand  = ""Mercedenz Benz"";@@        myCar.color  = ""black"";@@   myCar.reset();@@     myCar.licencePlate = ""JDG 60"";@@        @@        Car anotherCar = new Car();@@        @@        anotherCar.mileage = 17398.4;@@        anotherCar.brand  = ""Audi"";@@        anotherCar.color  = ""blue"";@@        anotherCar.licencePlate = ""IS 0017"";@@@@@@    }@@    @@}@@",SimpleAssignmentExpression:10;PublicClassSpecifier:1;PublicMethodSpecifier:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:6;StringLiteral:6;MethodDefinition:1;VoidDataType:1;ConstructorCall:2;ObjectMethodInvocation:1;ObjectCreationStatement:2;
13,14-classes,,6,code_sample,"package edu.pitt.is17.classes;@@@@public class Car {@@ public String brand;@@ public String color;@@ private String licensePlate = """";@@ public double mileage;@@ @@ public void registerCar(String newPlateNumber){@@  licensePlate = newPlateNumber;@@ }@@}@@",SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;StringVariable:3;ClassDefinition:1;FormalMethodParameter:1;StringDataType:3;StringLiteral:1;MethodDefinition:1;InstanceField:4;VoidDataType:1;DoubleDataType:1;PublicFieldSpecifier:3;SimpleVariable:3;PrivateFieldSpecifier:1;InstanceFieldInitializationStatement:1;
13,14-classes,,6,code_sample,package edu.pitt.is17.classes;@@@@public class Guitar {@@ String brand;@@ int numOfStrings;@@ double weight;@@ String color;@@ String bodyType;@@ InstrumentString string1 = new InstrumentString();@@ InstrumentString string2 = new InstrumentString();@@ InstrumentString string3 = new InstrumentString();@@ InstrumentString string4 = new InstrumentString();@@@@ // This method returns sound@@ void playChord(String chordName){@@  @@ }@@ @@ // This method returns sound@@ void playSingleNote(String noteName){@@  @@ }@@}@@,SimpleAssignmentExpression:4;PublicClassSpecifier:1;StringVariable:3;ClassDefinition:1;FormalMethodParameter:4;StringDataType:3;IntDataType:1;MethodDefinition:4;InstanceField:9;VoidDataType:2;DoubleDataType:1;SimpleVariable:5;ConstructorCall:4;InstanceFieldInitializationStatement:4;ObjectCreationStatement:4;
13,14-classes,,6,code_sample,"package edu.pitt.is17.classes;@@@@public class HomeworkHint {@@@@ public static void main(String[] args) {@@  String text = ""My name is Dmitriy"";@@  for(int i = 0; i<text.length(); i++){@@   char tempChar = text.charAt(i);@@   int tempCharVal = (int) tempChar;@@   int newCharVal = tempCharVal + 4;@@   char newChar = (char) newCharVal;@@   @@   System.out.print(tempChar + "" = "" + tempCharVal);@@   System.out.print("" : "" + newCharVal + "" = "" + newChar);@@   System.out.println();@@  }@@@@ }@@@@}@@",StringAddition:2;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;StringDataType:3;LessExpression:1;MethodDefinition:1;java.lang.String.charAt:1;ForStatement:1;SimpleAssignmentExpression:6;PublicClassSpecifier:1;PostIncrementExpression:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;StringVariable:1;CharDataType:2;java.lang.System.out.print:2;ExplicitTypeCasting:2;java.lang.String.length:1;StringLiteral:3;AddExpression:1;IntDataType:3;VoidDataType:1;StringInitializationStatement:1;ObjectMethodInvocation:1;ActualMethodParameter:3;
13,14-classes,,6,code_sample,package edu.pitt.is17.classes;@@@@public class InstrumentString {@@ double thickness;@@ String note;@@ String material;@@ @@}@@,PublicClassSpecifier:1;StringDataType:2;InstanceField:3;DoubleDataType:1;StringVariable:2;ClassDefinition:1;SimpleVariable:3;
13,14-classes,,6,code_sample,public class Dice {@@    private int sides;@@    @@    public Dice(){@@        sides = 6;@@    }@@    @@    public int roll(int times){@@        int score =@@        (int)Math.round(sides*Math.random() + 1);@@        return score;@@    }@@}@@,SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;MultiplyExpression:1;ConstructorDefinition:1;ClassDefinition:1;PublicConstructorSpecifier:1;FormalMethodParameter:1;ExplicitTypeCasting:1;AddExpression:1;IntDataType:5;MethodDefinition:1;java.lang.Math.round:1;InstanceField:1;ReturnStatement:1;SimpleVariable:1;PrivateFieldSpecifier:1;ActualMethodParameter:1;
13,14-classes,,6,code_sample,"package edu.pitt.is17.restaurant;@@@@public class Restaurant {@@ private String name;@@ private DiningTable table1;@@ private DiningTable table2;@@ private DiningTable table3;@@ private double totalSales;@@ @@ public static final double UNIQUE_DISH_PRICE = 13.5;@@ @@ public void prepareTables(){@@  totalSales = 0.0;@@  table1 = new DiningTable();@@  table1.setNumber(1);@@  table1.setSeats(4);@@@@  table2 = new DiningTable();@@  table2.setNumber(2);@@  table2.setSeats(2);@@@@  table3 = new DiningTable();@@  table3.setNumber(3);@@  table3.setSeats(6);@@ }@@ @@ public void assignTable(int groupSize){@@  if(table1.isAvailable() && table1.getSeats() >= groupSize){@@   table1.assign(groupSize);@@  }else if(table2.isAvailable() && table2.getSeats() >= groupSize){@@   table2.assign(groupSize);@@  }else if(table3.isAvailable() && table3.getSeats() >= groupSize){@@   table3.assign(groupSize);@@  }else {@@   System.out.println(""Sorry$$ we don't have any table available!"");@@  }@@ }@@ public void billAndReleaseTable(int tableNumber){@@  double bill = 0;@@  if(tableNumber == 1) bill = table1.billAndRelease();@@  if(tableNumber == 2) bill = table2.billAndRelease();@@  if(tableNumber == 3) bill = table3.billAndRelease();@@  totalSales += bill;@@  System.out.println(""Table ""+tableNumber+"" billed ""+bill);@@ }@@@@ public String getName() {@@  return name;@@ }@@@@ public void setName(String name) {@@  this.name = name;@@ }@@@@ public double getTotalSales() {@@  return totalSales;@@ }@@ @@ @@}@@",IfElseIfStatement:2;ClassConstantInitializationStatement:1;GreaterEqualExpression:3;EqualExpression:3;StringAddition:1;ClassDefinition:1;FinalFieldSpecifier:1;FormalMethodParameter:3;StringDataType:4;IfStatement:3;AndExpression:3;MethodDefinition:6;InstanceField:5;ReturnStatement:2;SimpleVariable:5;ConstructorCall:3;ClassField:1;SimpleAssignmentExpression:10;AddAssignmentExpression:1;PublicClassSpecifier:1;PublicMethodSpecifier:6;java.lang.System.out.println:2;IfElseStatement:1;StringVariable:1;ThisReference:1;InstanceFieldInvocation:1;StringLiteral:2;IntDataType:2;VoidDataType:4;DoubleDataType:4;PublicFieldSpecifier:1;ObjectMethodInvocation:15;PrivateFieldSpecifier:5;StaticFieldSpecifier:1;ActualMethodParameter:11;ObjectCreationStatement:3;
13,14-classes,,6,code_sample,package edu.pitt.is17.classes;@@@@public class TallyCounter {@@ private int counter = 0;@@ @@ public void increment(int incrementBy){@@  counter = counter + incrementBy;@@ }@@ @@ public int getCounter(){@@  return counter;@@ }@@}@@,SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:2;ClassDefinition:1;FormalMethodParameter:1;AddExpression:1;IntDataType:3;MethodDefinition:2;InstanceField:1;VoidDataType:1;ReturnStatement:1;PrivateFieldSpecifier:1;InstanceFieldInitializationStatement:1;
13,14-classes,,6,code_sample,"package edu.pitt.is17.classes;@@@@public class Tester {@@@@ public static void main(String[] args) {@@  TallyCounter tc = new TallyCounter();@@  System.out.println(tc.getCounter());@@  for(int i = 1; i<=10; i++){@@   tc.increment(5);@@  }@@  System.out.println(tc.getCounter());@@  @@  /*@@  Car myCar1 = new Car();@@  myCar1.brand = ""Ford"";@@  myCar1.color = ""red"";@@  myCar1.registerCar(""XYZ123"");@@  myCar1.mileage = 203324;@@  @@  Car myCar2 = new Car();@@  myCar2.brand = ""Toyota"";@@  myCar2.color = ""green"";@@  myCar2.registerCar(""ABC123"");@@  myCar2.mileage = 20;@@  @@  System.out.println(myCar1.brand);@@  System.out.println(myCar2.brand);@@@@  */@@  @@ }@@@@}@@",SimpleAssignmentExpression:2;PublicClassSpecifier:1;PostIncrementExpression:1;PublicMethodSpecifier:1;java.lang.System.out.println:2;ClassDefinition:1;FormalMethodParameter:1;LessEqualExpression:1;StaticMethodSpecifier:1;MethodDefinition:1;IntDataType:1;VoidDataType:1;ConstructorCall:1;ObjectMethodInvocation:3;ForStatement:1;ActualMethodParameter:3;ObjectCreationStatement:1;
14,15-arrays,,7,code_sample,"package edu.pitt.is17.arrays;@@@@public class BasicArrays {@@ public static void main(String[] args){@@  /*@@   *  10 chars@@   5 integers@@   10 boolean@@   25 float@@   */@@  @@  /*@@  char[] arr1 = new char[10];@@  System.out.println(arr1[0]); @@  int[] arr2 = new int[5];@@  System.out.println(arr2[0]);@@  boolean[] arr3 = new boolean[10];@@  System.out.println(arr3[0]);@@  float[] arr4 = new float[25];@@  System.out.println(arr4[0]);@@  @@  double[] values = { 32$$ 54$$ 67.5$$ 29$$ 44.5$$ 100$$ 65 }; @@  @@  double [] vals = new double[7];@@  vals[0] = 32;@@  vals[1] = 54;@@  @@  char[] gender = {'m'$$ 'f'};@@  int[] months = {1$$2$$3$$4$$5$$6$$7$$8$$9$$10$$11$$12};@@  System.out.println(months[13]);@@  @@  */@@  /*@@  char[] letters = {'a'$$'e'$$'i'$$'o'$$'x'};@@  @@  @@  String text = ""Something"";@@  int l1 = text.length();@@  @@  int l2 = letters.length;@@  */@@  @@  int[] scores = { 10$$ 9$$ 7$$ 10$$ 5$$ 20$$ 74$$ 12$$32$$ 453$$ 342};@@  int sum = addScores(scores);@@  double avg = sum/scores.length;@@  System.out.println(""SUM: "" + sum);@@  System.out.println(""AVG: "" + avg);@@@@ }@@ @@ public static int addScores(int[] values){@@  int totalScore = 0;@@  for (int i = 0; i < values.length; i++){@@      totalScore = totalScore + values[i];@@  }@@  @@  int[] ra = reverseArray(values);@@  return totalScore;@@ }@@ @@ public static int[] reverseArray(int[] values){@@  int[] ra = new int[values.length];@@  for(int i = values.length-1; i>=0;i--){@@   ra[i - (values.length - 1)] = values[i];@@   // System.out.print((i - values.length - 1) + "": "" + ra[values.length - i] + ""$$ "");@@  }@@  return ra;@@ }@@@@}@@",GreaterEqualExpression:1;StringAddition:2;ClassDefinition:1;FormalMethodParameter:3;ArrayCreationStatement:1;SubtractExpression:2;StaticMethodSpecifier:3;StringDataType:2;LessExpression:1;MethodDefinition:3;ArrayVariable:2;ReturnStatement:2;PostDecrementExpression:1;ForStatement:2;ArrayElement:2;SimpleAssignmentExpression:10;PublicClassSpecifier:1;PostIncrementExpression:1;PublicMethodSpecifier:3;java.lang.System.out.println:2;ArrayLength:5;ArrayInitializationStatement:1;DivideExpression:1;StringLiteral:2;AddExpression:1;IntDataType:9;VoidDataType:1;DoubleDataType:1;ArrayDataType:3;ActualMethodParameter:4;ArrayInitializer:1;
14,15-arrays,,7,code_sample,package edu.pitt.is17.lec02;@@@@public class Strings2 {@@    @@    public static void main(String[] args) {@@        double[] values = new double[10];@@        @@        int[] numbers = new int[15];@@        @@        String[] names = new String[5];@@        int[] numbers = {0$$  1$$  1$$  2$$  3$$  5$$  8$$  13$$  21};@@@@        int firstElement = numbers[0];@@        int fifthElement = numbers[4];@@        int[] scores = { 10$$ 9$$ 7$$ 10$$ 5$$ 20$$ 74 };@@        for(int i = 0; i < scores.length; i++){@@            System.out.println(scores[i]);@@        }@@        double[] values = { 23$$ 43$$ 67$$ 6.3$$ 56 };@@        double total = 0;@@        for (double element : values) {@@            total = total + element;@@        }@@@@    }@@    @@}@@,SimpleAssignmentExpression:11;PublicClassSpecifier:1;PostIncrementExpression:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;ArrayLength:1;ClassDefinition:1;FormalMethodParameter:1;ArrayCreationStatement:3;StaticMethodSpecifier:1;ArrayInitializationStatement:3;LessExpression:1;AddExpression:1;MethodDefinition:1;ArrayVariable:6;IntDataType:6;VoidDataType:1;DoubleDataType:4;ArrayDataType:6;ForStatement:1;ArrayElement:3;ActualMethodParameter:1;ArrayInitializer:3;ForEachStatement:1;
15,16-two-dimensional-arrays,,7,code_sample,"package f16_recitation7;@@@@public class ProblemX {@@@@ public static void main(String[] args) {@@  String[] suit = { ""Clubs""$$ ""Diamonds""$$ ""Hearts""$$ ""Spades"" }; @@  String[] rank = { ""2""$$ ""3""$$ ""4""$$ ""5""$$ ""6""$$ ""7""$$ ""8""$$ ""9""$$ ""10""$$ ""Jack""$$ ""Queen""$$ ""King""$$ ""Ace""};@@  @@  // the idea here is to do a two-dimensional array with all the cards@@  // by doing all combinations of suits and ranks. @@  String[][] cards = fillDeck(suit$$rank);@@@@  // print out the two-dim array using nested loops@@  for(String[] s : cards){@@   for(String c : s){@@    System.out.print(c+""\t"");@@   }@@   System.out.println();@@  }@@@@ }@@ @@ public static String[][] fillDeck(String[] suit$$ String[] rank){@@  String[][] cards = new String[suit.length][rank.length];@@  @@  for(int i = 0; i<rank.length; i++){@@   for(int j = 0; j<suit.length; j++){@@    cards[j][i] = rank[i] + "" of "" + suit[j];@@   }@@  }@@  @@  return cards;@@ }@@@@}@@",StringAddition:2;ClassDefinition:1;MultiDimensionalArrayDataType:2;FormalMethodParameter:2;ArrayCreationStatement:1;StaticMethodSpecifier:2;StringDataType:4;LessExpression:2;MethodDefinition:2;ArrayVariable:3;ReturnStatement:1;ForStatement:2;ArrayElement:1;ForEachStatement:2;SimpleAssignmentExpression:7;PublicClassSpecifier:1;PostIncrementExpression:2;PublicMethodSpecifier:2;java.lang.System.out.println:1;ArrayLength:3;java.lang.System.out.print:1;ArrayInitializationStatement:2;StringLiteral:4;IntDataType:2;VoidDataType:1;ArrayDataType:2;ActualMethodParameter:2;ArrayInitializer:2;
15,16-two-dimensional-arrays,,7,code_sample,package f16_recitation7;@@@@public class TwoDimensionalArray {@@@@ public static void main(String[] args) {@@  @@  int[][] matrix = new int[3][3];@@  int[][] matrix = {{1$$2$$4}$${1$$1$$4}$${7$$5$$7}};@@@@ }@@@@}@@,SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;ClassDefinition:1;MultiDimensionalArrayDataType:2;FormalMethodParameter:1;ArrayCreationStatement:1;StaticMethodSpecifier:1;ArrayInitializationStatement:1;MethodDefinition:1;ArrayVariable:2;IntDataType:2;VoidDataType:1;ArrayInitializer:1;
16,17-arraylist,,7,code_sample,package edu.pitt.is17.arrays;@@@@import java.util.ArrayList;@@@@public class ArrayProcessor {@@@@ public double findMin(ArrayList<Double> values){@@  double min = values.get(0);@@  for(double val : values){@@   if(val < min){@@    min = val;@@   }@@  }@@  return min;@@ }@@ @@ public double findMax(ArrayList<Double> values){@@  double max = values.get(0);@@  for(double val : values){@@   if(val > max){@@    max = val;@@   }@@  }@@  return max;@@ }@@ @@ public double[] findExtremes(ArrayList<Double> values){@@  double min = findMin(values);@@  double max = findMax(values);@@  double[] extremes = new double[2];@@  extremes[0] = min;@@  extremes[1] = max;@@  return extremes;@@ }@@ @@ public void printArray(ArrayList<Double> values){@@  for(double val : values){@@   System.out.println(val);@@  }@@ }@@}@@,SimpleAssignmentExpression:9;PublicClassSpecifier:1;PublicMethodSpecifier:4;java.lang.System.out.println:1;ImportStatement:1;ClassDefinition:1;java.util.ArrayList:1;FormalMethodParameter:4;ArrayCreationStatement:1;IfStatement:2;LessExpression:1;MethodDefinition:4;ArrayVariable:1;GreaterExpression:1;VoidDataType:1;ReturnStatement:3;DoubleDataType:11;ObjectMethodInvocation:2;ArrayDataType:1;ActualMethodParameter:5;ArrayElement:2;ForEachStatement:3;
16,17-arraylist,,7,code_sample,"package edu.pitt.is17.arrays;@@@@import java.util.ArrayList;@@@@public class EnhancedForLoop {@@@@ public static void main(String[] args) {@@  double[] list = {3$$34$$543$$646$$75$$234$$6};@@  ArrayList<Double> list1 = new ArrayList<Double>();@@  list1.add(Double.valueOf(20));@@  list1.add(Double.valueOf(24));@@  list1.add(Double.valueOf(253));@@  list1.add(Double.valueOf(223));@@  @@  ArrayProcessor ap = new ArrayProcessor();@@  double min = ap.findMin(list1);@@  System.out.println(min);@@  @@  /*@@  for(int i = 0; i<list.length; i++){@@   double elem = list[i];@@   // System.out.println(elem);@@  }@@  @@  String[] cars = {""Ford""$$ ""Toyota""$$ ""Chevy""$$ ""Honda""};@@  for(String car : cars){@@   System.out.println(car);@@  }@@  */@@  @@  @@ }@@@@}@@",SimpleAssignmentExpression:4;PublicClassSpecifier:1;PublicMethodSpecifier:1;java.lang.System.out.println:1;ImportStatement:1;ClassDefinition:1;java.util.ArrayList:2;FormalMethodParameter:1;GenericObjectCreationStatement:1;StaticMethodSpecifier:1;ArrayInitializationStatement:1;MethodDefinition:1;ArrayVariable:1;VoidDataType:1;DoubleDataType:2;ArrayDataType:1;ObjectMethodInvocation:5;ConstructorCall:1;ActualMethodParameter:6;ArrayInitializer:1;ObjectCreationStatement:1;
17,18-inheritance,,8,code_sample,"package f16_lecture_9;@@@@class Car {@@    public void m1() {@@        System.out.println(""car 1"");@@    }@@    public void m2() {@@        System.out.println(""car 2"");@@    }@@    public String toString() {@@        return ""vroom"";@@    }@@}@@@@class Truck extends Car {@@    public void m1() {@@        System.out.println(""truck 1"");@@    }@@}@@@@public class Inheritance1@@{  @@    public static void main(String[] args) @@    {@@        Truck mycar = new Truck();@@        System.out.println(mycar);    @@        mycar.m1();                   @@        mycar.m2();@@    }@@}@@",SimpleAssignmentExpression:1;PublicClassSpecifier:1;ExtendsSpecification:1;PublicMethodSpecifier:5;java.lang.System.out.println:4;ClassDefinition:3;FormalMethodParameter:1;StringDataType:5;StaticMethodSpecifier:1;StringLiteral:4;MethodDefinition:5;VoidDataType:4;ReturnStatement:1;OverridingToString:1;ConstructorCall:1;ObjectMethodInvocation:2;ActualMethodParameter:4;ObjectCreationStatement:1;
17,18-inheritance,,8,code_sample,"package f16_lecture_9;@@@@class Car {@@    @@    public void m1() {@@        System.out.println(""car 1"");@@    }@@    @@    public void m2() {@@        System.out.println(""car 2"");@@    }@@    @@    public String toString() {@@        return ""vroom"";@@    }@@}@@@@class Truck extends Car {@@    @@    public void m1() {@@        System.out.println(""truck 1"");@@    }@@    @@    public void m2() {@@        super.m1();@@    }@@    @@    public String toString() {@@        return super.toString()@@        + super.toString();@@    }@@}@@public class Inheritance2 {@@@@    public static void main(String[] args) {@@        Truck mycar = new Truck();@@        System.out.println(mycar);@@        mycar.m1();@@        mycar.m2();@@    }@@}@@@@",SimpleAssignmentExpression:1;PublicClassSpecifier:1;ExtendsSpecification:1;PublicMethodSpecifier:7;java.lang.System.out.println:4;ClassDefinition:3;FormalMethodParameter:1;StringDataType:6;StaticMethodSpecifier:1;StringLiteral:4;AddExpression:1;MethodDefinition:7;VoidDataType:5;ReturnStatement:2;OverridingToString:2;ConstructorCall:1;ObjectMethodInvocation:2;ActualMethodParameter:4;ObjectCreationStatement:1;
17,18-inheritance,,8,code_sample,"package f16_lecture_9;@@@@public abstract class Person{@@    private String name;@@    @@    public Person(String name){@@        this.name = name;@@    }@@    @@    public void setName(String name){@@        this.name = name;@@    }@@    public String getName(){@@        return this.name;@@    }@@    @@    public void introduceMyself(){@@        System.out.println(""Hello$$ my name is ""+getName());@@    }@@    @@    public String toString(){@@        return getName();@@    }@@}@@@@public class Employee extends Person {@@    private double salary;@@    @@    public Employee(String name){@@        super(name);@@        salary = 1000.0;@@    }@@    @@    public double getSalary() {@@        return salary;@@    }@@    @@    public void setSalary(double salary) {@@        this.salary = salary;@@    }@@    @@    public void introduceMyself(){@@        super.introduceMyself();@@        System.out.println("" and I am employee"");@@    }@@    @@}@@public class Student extends Person {@@    private double grade;@@    @@    public Student(String name){@@        super(name);@@        grade = 0;@@    }@@    @@    public void setGrade(double grade){@@        this.grade = grade;@@    }@@    public double getGrade(){@@        return this.grade;@@    }@@    @@    public void introduceMyself(){@@        super.introduceMyself(); // still the original method may be called using super@@        System.out.println("" and I am a student"");@@    }@@    @@    public String toString(){@@        return ""Student:""+super.toString();@@    }@@}@@@@public class InheritanceTest {@@@@ public static void main(String[] args) {@@  Person[] people = new Person[3];@@  people[0] = new Student(""John"");@@  people[1] = new Student(""Ana"");@@  people[2] = new Employee(""Rose"");@@@@  introduceAllPeople(people);@@  @@ }@@ @@ public static void introduceAllPeople(Person[] ps){@@  for(Person p : ps){@@   p.introduceMyself();@@  }@@ }@@@@}@@",ConstructorDefinition:3;StringAddition:2;ClassDefinition:4;FormalMethodParameter:8;ArrayCreationStatement:1;StringDataType:11;StaticMethodSpecifier:2;MethodDefinition:13;ArrayVariable:1;AbstractClassSpecifier:1;InstanceField:3;ReturnStatement:5;SimpleVariable:3;ConstructorCall:3;ArrayElement:3;ForEachStatement:1;SimpleAssignmentExpression:10;PublicClassSpecifier:4;ExtendsSpecification:2;PublicMethodSpecifier:13;java.lang.System.out.println:3;StringVariable:1;ThisReference:6;PublicConstructorSpecifier:3;InstanceFieldInvocation:6;StringLiteral:7;VoidDataType:8;DoubleDataType:6;OverridingToString:2;ArrayDataType:1;ObjectMethodInvocation:1;PrivateFieldSpecifier:3;ActualMethodParameter:7;ObjectCreationStatement:3;
17,18-inheritance,,8,code_sample,"package f16_lecture_9;@@@@public class Person{@@    private String name;@@    @@    public void setName(String name){@@        this.name = name;@@    }@@    public String getName(){@@        return this.name;@@    }@@}@@@@public class Student extends Person{@@    private double grade;@@    @@    public void setGrade(double grade){@@        this.grade = grade;@@    }@@    public double getGrade(){@@        return this.grade;@@    }@@}@@@@public class StudentTest{@@    public static void main(String args[]){@@        Student me = new Student();@@        me.setName(""Julio"");@@        me.setGrade(0.0);@@    }@@}@@@@public class Person{@@    private String name;@@    @@    public Person(String name){@@        this name = name;@@    }@@    @@    public void setName(String name){@@        this.name = name;@@    }@@    public String getName(){@@        return this.name;@@    }@@}@@@@public class Student extends Person{@@    private double grade;@@    @@    public Student(){@@        super(""Joe"");@@        grade = 0.0;@@    }@@    public Student(String name){@@        super(name);@@        grade = 0.0;@@    }@@@@    public void setGrade(double grade){@@        this.grade = grade;@@    }@@    public double getGrade(){@@        return this.grade;@@    }@@}@@@@public class StudentTest{@@    public static void main(String args[]){@@        Student me = new Student();@@        Student me = new Student(""Eric"");@@        me.setName(""Julio"");@@        me.setGrade(0.0);@@    }@@}@@@@abstract class Account@@{@@    public Account(long acctNumber$$ double initBalance)@@    {@@            this.accountNumber = acctNumber;@@        this.balance = initBalance;@@    }@@}@@@@final class Account@@{@@    public Account(long acctNumber$$ double initBalance)@@    {@@        this.accountNumber = acctNumber;@@        this.balance = initBalance;@@    }@@}@@@@public class CheckingAccount extends Account {@@    public CheckingAccount(long acctNumber$$ double initBalance$$ double overdraftPenalty){@@        super(acctNumber$$ initBalance);@@        this.overdraftPenalty = overdraftPenalty;@@    }@@}@@@@public class Rectangle {@@    private double width;@@    private double height;@@    @@    public Rectangle(double width$$ double height){@@        this.width = width;@@        this.height = height;@@    }@@    @@    public double area(){@@        return width*height;@@    }@@    @@    public double perimeter(){@@        return 2*width + 2*height;@@    }@@}@@@@public class Person{@@    private String name;@@    protected String name;@@@@    public Person(String name){@@        this name = name;@@    }@@    @@    public void setName(String name){@@        this.name = name;@@    }@@    public String getName(){@@        return this.name;@@    }@@}@@@@public class Student extends Person{@@    private double grade;@@    @@    public Student(String name){@@        super(name);@@        grade = 0.0;@@    }@@    @@    public void rename(){@@        XXX name = ""the wonderful "" + name;@@    }@@    @@    public void setGrade(double grade){@@        this.grade = grade;@@    }@@    public double getGrade(){@@        return this.grade;@@    }@@}@@@@public class Student extends Person{@@    private double grade;@@    @@    public Student(String name){@@        super(name);@@        grade = 0.0;@@    }@@    @@    public void rename(){@@        setName(""the wonderful "" + getName());@@    }@@    @@    public void setGrade(double grade){@@        this.grade = grade;@@    }@@    public double getGrade(){@@        return this.grade;@@    }@@    public String toString(){@@        return name;@@    }@@@@}@@@@public abstract class Person{@@    private String name;@@    @@    public Person(String name){@@        this name = name;@@    }@@    @@    public void setName(String name){@@        this.name = name;@@    }@@    public String getName(){@@        return this.name;@@    }@@    @@    public abstract void introduceMyself();@@}@@@@@@",ConstructorDefinition:11;StringAddition:2;ClassDefinition:14;FormalMethodParameter:20;FinalClassSpecifier:1;StringDataType:16;StaticMethodSpecifier:2;MethodDefinition:23;InstanceField:11;AbstractClassSpecifier:2;ReturnStatement:11;SimpleVariable:11;ConstructorCall:3;SimpleAssignmentExpression:26;PublicClassSpecifier:12;ExtendsSpecification:5;PublicMethodSpecifier:23;MultiplyExpression:2;StringVariable:5;ThisReference:23;PublicConstructorSpecifier:11;InstanceFieldInvocation:23;StringLiteral:6;AddExpression:1;ProtectedFieldSpecifier:1;VoidDataType:13;DoubleDataType:20;LongDataType:3;OverridingToString:1;ObjectMethodInvocation:4;PrivateFieldSpecifier:10;ActualMethodParameter:6;ObjectCreationStatement:3;
17,18-inheritance,,8,code_sample,package f16_lecture_9;@@@@@@public class Rectangle {@@    private double width;@@    private double height;@@    @@    public Rectangle(double width$$ double height){@@        this.width = width;@@        this.height = height;@@    }@@    @@    public double area(){@@        return width*height;@@    }@@    @@    @@    public double perimeter(){@@        return 2*width + 2*height;@@    }@@}@@public class Square extends Rectangle{@@ /*@@  * Since the superclass (Rectangle) has a constructor rceiving 2 double values$$@@  * the subclass Square MUST call the constructor of the super class passing 2 doubles. @@  * Constructor of the superclass is accessed with the reference super.@@  */@@ public Square(double side){@@  super(side$$side);@@ }@@}@@,SimpleAssignmentExpression:2;PublicClassSpecifier:2;ExtendsSpecification:1;PublicMethodSpecifier:2;MultiplyExpression:2;ConstructorDefinition:2;ClassDefinition:2;ThisReference:2;PublicConstructorSpecifier:2;FormalMethodParameter:2;InstanceFieldInvocation:2;AddExpression:1;MethodDefinition:2;InstanceField:2;ReturnStatement:2;DoubleDataType:6;SimpleVariable:2;PrivateFieldSpecifier:2;
17,18-inheritance,,8,code_sample,"package f16_lecture_9;@@@@public abstract class Person{@@    private String name;@@    @@    public Person(String name){@@        this.name = name;@@    }@@    @@    public void setName(String name){@@        this.name = name;@@    }@@    public String getName(){@@        return this.name;@@    }@@    @@    public void introduceMyself(){@@        System.out.println(""Hello$$ my name is ""+getName());@@    }@@    @@    public String toString(){@@        return getName();@@    }@@}@@@@public class Student extends Person {@@    private double grade;@@    @@    public Student(String name){@@        super(name);@@        grade = 0;@@    }@@    @@    public void setGrade(double grade){@@        this.grade = grade;@@    }@@    public double getGrade(){@@        return this.grade;@@    }@@    @@    public void introduceMyself(){@@        super.introduceMyself(); // still the original method may be called using super@@        System.out.println("" and I am a student"");@@    }@@    @@    public String toString(){@@        return ""Student:""+super.toString();@@    }@@}@@@@@@public class StudentTest {@@@@ public static void main(String[] args) {@@  Student s = new Student(""Julio"");@@  s.setGrade(100);@@  s.introduceMyself();@@@@  @@ }@@@@}@@",ConstructorDefinition:2;StringAddition:2;ClassDefinition:3;FormalMethodParameter:5;StringDataType:8;StaticMethodSpecifier:1;MethodDefinition:9;AbstractClassSpecifier:1;InstanceField:2;ReturnStatement:4;SimpleVariable:2;ConstructorCall:1;SimpleAssignmentExpression:5;PublicClassSpecifier:3;ExtendsSpecification:1;PublicMethodSpecifier:9;java.lang.System.out.println:2;StringVariable:1;ThisReference:5;PublicConstructorSpecifier:2;InstanceFieldInvocation:5;StringLiteral:4;VoidDataType:5;DoubleDataType:3;OverridingToString:2;ObjectMethodInvocation:2;PrivateFieldSpecifier:2;ActualMethodParameter:4;ObjectCreationStatement:1;
17,18-inheritance,,8,code_sample,"package f16_lecture_9;@@@@public abstract class Person{@@    private String name;@@    @@    public Person(String name){@@        this.name = name;@@    }@@    @@    public void setName(String name){@@        this.name = name;@@    }@@    public String getName(){@@        return this.name;@@    }@@    @@    public void introduceMyself(){@@        System.out.println(""Hello$$ my name is ""+getName());@@    }@@    @@    public String toString(){@@        return getName();@@    }@@}@@@@public class Student extends Person {@@    private double grade;@@    @@    public Student(String name){@@        super(name);@@        grade = 0;@@    }@@    @@    public void setGrade(double grade){@@        this.grade = grade;@@    }@@    public double getGrade(){@@        return this.grade;@@    }@@    @@    public void introduceMyself(){@@        super.introduceMyself(); // still the original method may be called using super@@        System.out.println("" and I am a student"");@@    }@@    @@    public String toString(){@@        return ""Student:""+super.toString();@@    }@@}@@@@public class ToStringExample {@@@@ public static void main(String[] args) {@@  Person s = new Student(""Julio"");@@  // Printing an object automatically calls the method toString on it @@  // and we have overridden the method in Student class$$ making it to @@  // print Student:name@@  System.out.println(s);@@@@ }@@@@}@@",ConstructorDefinition:2;StringAddition:2;ClassDefinition:3;FormalMethodParameter:5;StringDataType:8;StaticMethodSpecifier:1;MethodDefinition:9;AbstractClassSpecifier:1;InstanceField:2;ReturnStatement:4;SimpleVariable:2;ConstructorCall:1;SimpleAssignmentExpression:5;PublicClassSpecifier:3;ExtendsSpecification:1;PublicMethodSpecifier:9;java.lang.System.out.println:3;StringVariable:1;ThisReference:5;PublicConstructorSpecifier:2;InstanceFieldInvocation:5;StringLiteral:4;VoidDataType:5;DoubleDataType:3;OverridingToString:2;PrivateFieldSpecifier:2;ActualMethodParameter:4;ObjectCreationStatement:1;
18,19-interfaces,,9,code_sample,package edu.pitt.is17.polymorphism;@@@@public class BankTester {@@@@ public static void main(String[] args) {@@        IAccount account;@@        account = new CheckingAccount(1000);@@  account.withdraw(20);@@  account.deposit(50);@@  @@  account = new SavingsAccount(2000);@@  account.withdraw(500);@@  account.deposit(30);@@@@ }@@@@}@@,SimpleAssignmentExpression:2;PublicClassSpecifier:1;PublicMethodSpecifier:1;ClassDefinition:1;FormalMethodParameter:1;StaticMethodSpecifier:1;ObjectVariable:1;MethodDefinition:1;VoidDataType:1;SimpleVariable:1;ConstructorCall:2;ObjectMethodInvocation:4;ActualMethodParameter:6;ObjectCreationStatement:2;
18,19-interfaces,,9,code_sample,"package edu.pitt.is17.lec02;@@@@public interface Vehicle{@@    public void drive(double speed$$ double distance);@@}@@public class SportsCar implements Vehicle{@@    public void drive(double speed$$ double distance){@@        // Code here@@    }@@}@@@@public interface IAccount {@@    public void deposit(double amount);@@    public void withdraw(double amount);@@}@@public class CheckingAccount implements IAccount {@@    public void deposit(double amount){@@        // Logic implementation@@    }@@    public void withdraw(double amount){@@        // Logic implementation@@    }@@}@@@@@@interface Animal {@@    public void eat();@@    public void travel();@@}@@public class MammalInt implements Animal {@@    public void eat() {@@        System.out.println(""Mammal eats"");@@    }@@    public void travel() {@@        System.out.println(""Mammal travels"");@@    }@@    public int noOfLegs() {@@        return 0;@@    }@@}@@public interface Sports {@@    public void setHomeTeam(String name);@@    public void setVisitingTeam(String name);@@}@@@@// Filename: Football.java@@public interface Football extends Sports {@@}@@@@// Filename: Hockey.java@@public interface Hockey extends Sports {@@}@@public interface IMovable {@@    public void move();@@    public void move(double distance);@@}@@@@",MethodImplementation:5;PublicClassSpecifier:3;PublicMethodSpecifier:15;java.lang.System.out.println:2;PublicInterfaceSpecifier:6;InterfaceDefinition:7;ClassDefinition:10;FormalMethodParameter:9;StringDataType:2;StringLiteral:2;MethodDefinition:15;ImplementsSpecification:5;IntDataType:1;VoidDataType:14;ReturnStatement:1;DoubleDataType:7;ActualMethodParameter:2;AbstractMethodDefinition:9;